name: Solve VRPDFD

on: push

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  run:
    name: Run algorithm
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        problem: ["6.10.1", "6.10.2", "6.10.3", "6.10.4", "6.20.1", "6.20.2", "6.20.3", "6.20.4", "6.5.1", "6.5.2", "6.5.3", "6.5.4",
          "10.10.1", "10.10.2", "10.10.3", "10.10.4", "10.20.1", "10.20.2", "10.20.3", "10.20.4", "10.5.1", "10.5.2", "10.5.3", "10.5.4",
          "12.10.1", "12.10.2", "12.10.3", "12.10.4", "12.20.1", "12.20.2", "12.20.3", "12.20.4", "12.5.1", "12.5.2", "12.5.3", "12.5.4",
          "20.10.1", "20.10.2", "20.10.3", "20.10.4", "20.20.1", "20.20.2", "20.20.3", "20.20.4", "20.5.1", "20.5.2", "20.5.3", "20.5.4",
          "50.10.1", "50.10.2", "50.10.3", "50.10.4", "50.20.1", "50.20.2", "50.20.3", "50.20.4", "50.30.1", "50.30.2", "50.30.3", "50.30.4", "50.40.1", "50.40.2", "50.40.3", "50.40.4",
          "100.10.1", "100.10.2", "100.10.3", "100.10.4", "100.20.1", "100.20.2", "100.20.3", "100.20.4", "100.30.1", "100.30.2", "100.30.3", "100.30.4", "100.40.1", "100.40.2", "100.40.3", "100.40.4",
          "150.10.1", "150.10.2", "150.10.3", "150.10.4", "150.20.1", "150.20.2", "150.20.3", "150.20.4", "150.30.1", "150.30.2", "150.30.3", "150.30.4", "150.40.1", "150.40.2", "150.40.3", "150.40.4",
          "200.10.1", "200.10.2", "200.10.3", "200.10.4", "200.20.1", "200.20.2", "200.20.3", "200.20.4", "200.30.1", "200.30.2", "200.30.3", "200.30.4", "200.40.1", "200.40.2", "200.40.3", "200.40.4"]
        loop: [0, 1]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: Serious-senpai/genetic-algorithm
          ref: "priority-split-compare"
          token: ${{ secrets.PAT }}
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v5

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Build binary files
        run: scripts/build.sh

      - name: Run optimizer
        run: |
          exitcode=0
          set +e
          for i in $(seq 0 4)
          do
            echo "---------- RUN #$((5 * ${{ matrix.loop }} + i)) ----------"

            timeout --preserve-status --signal=INT 3000 \
            python vrpdfd.py ${{ matrix.problem }} \
            --dump "output-${{ matrix.problem }}-$i.json" "pickle-${{ matrix.problem }}-$i.pkl" "plot-${{ matrix.problem }}-$i.png" \
            --log "log-${{ matrix.problem }}-$i.csv" \
            --extra "run #$i"

            run_exitcode=$?
            if [ "$run_exitcode" -ne 0 ] && [ "$run_exitcode" -ne 130 ]; then
              echo "::warning::Exit code $run_exitcode at run index #$i"
              exitcode=1
            fi

          done

          exit $exitcode

# It is also possible to run the algorithm 10 times in parallel (by delegating to 10 child processes and add `wait` at the end),
# but it will affect the computation time

      - name: Upload solutions
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: solution-${{ matrix.problem }}
          path: output-*.json

      - name: Upload logs and pickled results
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: log-${{ matrix.problem }}
          path: |
            log-*.csv
            pickle-*.pkl
            plot-*.png

  summary:
    name: Summarize solutions
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: run

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: Serious-senpai/genetic-algorithm
          ref: "priority-split-compare"
          token: ${{ secrets.PAT }}
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v5

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Build binary files
        run: scripts/build.sh

      - name: Download solutions
        uses: actions/download-artifact@v4
        with:
          path: vrpdfd-summary/
          pattern: solution-*
          merge-multiple: true

      - name: Summarize solutions
        run: |
          export PYTHONPATH=$GITHUB_WORKSPACE
          python scripts/vrpdfd-summary.py

      - name: Upload summary as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: summary
          path: |
            vrpdfd-summary/output-*.json
            vrpdfd-summary/vrpdfd-summary.csv
